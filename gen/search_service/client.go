// Code generated by goa v3.15.2, DO NOT EDIT.
//
// SearchService client
//
// Command:
// $ goa gen film-lib/design

package searchservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "SearchService" service client.
type Client struct {
	SearchLibraryEndpoint goa.Endpoint
	GetAllActorsEndpoint  goa.Endpoint
	GetAllFilmsEndpoint   goa.Endpoint
}

// NewClient initializes a "SearchService" service client given the endpoints.
func NewClient(searchLibrary, getAllActors, getAllFilms goa.Endpoint) *Client {
	return &Client{
		SearchLibraryEndpoint: searchLibrary,
		GetAllActorsEndpoint:  getAllActors,
		GetAllFilmsEndpoint:   getAllFilms,
	}
}

// SearchLibrary calls the "searchLibrary" endpoint of the "SearchService"
// service.
// SearchLibrary may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) SearchLibrary(ctx context.Context, p *SearchLibraryPayload) (res *Film, err error) {
	var ires any
	ires, err = c.SearchLibraryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Film), nil
}

// GetAllActors calls the "getAllActors" endpoint of the "SearchService"
// service.
// GetAllActors may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) GetAllActors(ctx context.Context, p *GetAllActorsPayload) (res ActorWithFilmsResultCollection, err error) {
	var ires any
	ires, err = c.GetAllActorsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(ActorWithFilmsResultCollection), nil
}

// GetAllFilms calls the "getAllFilms" endpoint of the "SearchService" service.
// GetAllFilms may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) GetAllFilms(ctx context.Context, p *GetAllFilmsPayload) (res FilmResultCollection, err error) {
	var ires any
	ires, err = c.GetAllFilmsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(FilmResultCollection), nil
}
