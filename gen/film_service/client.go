// Code generated by goa v3.15.2, DO NOT EDIT.
//
// FilmService client
//
// Command:
// $ goa gen film-lib/design

package filmservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "FilmService" service client.
type Client struct {
	AddFilmEndpoint        goa.Endpoint
	UpdateFilmInfoEndpoint goa.Endpoint
	DeleteFilmEndpoint     goa.Endpoint
}

// NewClient initializes a "FilmService" service client given the endpoints.
func NewClient(addFilm, updateFilmInfo, deleteFilm goa.Endpoint) *Client {
	return &Client{
		AddFilmEndpoint:        addFilm,
		UpdateFilmInfoEndpoint: updateFilmInfo,
		DeleteFilmEndpoint:     deleteFilm,
	}
}

// AddFilm calls the "addFilm" endpoint of the "FilmService" service.
// AddFilm may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "already-exists" (type *AlreadyExists): Film already exists
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) AddFilm(ctx context.Context, p *AddFilmPayload) (res *FilmResult, err error) {
	var ires any
	ires, err = c.AddFilmEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FilmResult), nil
}

// UpdateFilmInfo calls the "updateFilmInfo" endpoint of the "FilmService"
// service.
// UpdateFilmInfo may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "not-found" (type *NotFound): Film not found
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) UpdateFilmInfo(ctx context.Context, p *UpdateFilmInfoPayload) (err error) {
	_, err = c.UpdateFilmInfoEndpoint(ctx, p)
	return
}

// DeleteFilm calls the "deleteFilm" endpoint of the "FilmService" service.
// DeleteFilm may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) DeleteFilm(ctx context.Context, p *DeleteFilmPayload) (err error) {
	_, err = c.DeleteFilmEndpoint(ctx, p)
	return
}
